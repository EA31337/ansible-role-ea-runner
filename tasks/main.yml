---
- name: Check platform (non-Windows)
  when: ansible_os_family != "Windows"
  block:
    - name: Install winbind package
      ansible.builtin.apt:
        allow_unauthenticated: true
        install_recommends: "{{ 'yes' if wine_install_recommends else 'no' }}"
        name: '{{ item }}'
        state: present
        update_cache: true
      become: true
      with_items:
        - winbind
    - name: Query MT platform path
      changed_when: false
      ansible.builtin.find:
        paths: '{{ ansible_env.HOME }}/.wine'
        patterns: >-
          {{ mt_runner_mt_files[mt_runner_mt_version | int].terminal }}
        recurse: true
      register: mt_path_terminal
    - name: Set platform's directory path
      ansible.builtin.set_fact:
        mt_runner_mt_path: "{{ mt_path_terminal.files[0].path | dirname }}"
    - name: Set platform's terminal filepath
      ansible.builtin.set_fact:
        mt_runner_mt_terminal_path: "{{ mt_path_terminal.files[0].path }}"

- name: Convert paths (non-Windows)
  when: ansible_os_family != "Windows"
  block:
    - name: Converts platform's path to Unix
      changed_when: false
      # noqa command-instead-of-shell
      ansible.builtin.command: >-
        winepath {{ mt_runner_mt_path | quote }}
      environment:
        DISPLAY: "{{ xvfb_display }}"
      register: cmd_winepath_mt_path
    - name: Converts platform's terminal path to Unix
      changed_when: false
      # noqa command-instead-of-shell
      ansible.builtin.command: >-
        winepath {{ mt_runner_mt_terminal_path | quote }}
      environment:
        DISPLAY: "{{ xvfb_display }}"
      register: cmd_winepath_mt_terminal_path
    - name: Set MT platform path 1 for Unix
      ansible.builtin.set_fact:
        mt_runner_mt_path: "{{ cmd_winepath_mt_path.stdout }}"
    - name: Set MT platform path 2 for Unix
      ansible.builtin.set_fact:
        mt_runner_mt_terminal_path: "{{ cmd_winepath_mt_terminal_path.stdout }}"

- name: Creates tester.ini
  ansible.builtin.template:
    dest: '{{ mt_runner_mt_path }}/tester.ini'
    mode: "0644"
    src: '{{ mt_runner_mt_version }}/tester.ini.j2'

- name: Clean-up before the test (non-Windows)
  when: ansible_os_family != "Windows"
  block:
    - name: Kills any existing terminal processes
      ansible.builtin.command: pkill terminal
      changed_when: false
      failed_when: cmd_pkill_res.rc > 1
      register: cmd_pkill_res
    - name: Finds old logs
      changed_when: false
      ansible.builtin.find:
        paths: "{{ mt_runner_mt_path }}"
        patterns: "*.log"
        recurse: true
      register: mt_old_logs
    - name: Removes old log files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ mt_old_logs.files }}"
      tags:
        - molecule-idempotence-notest

- name: Ensures specified files are present
  block:
    - name: Ensures destination directories are present
      ansible.builtin.file:
        mode: '0755'
        path: "{{ item.dest }}"
        state: directory
      loop: "{{ mt_runner_get_url_list }}"
    - name: Ensures files are present
      ansible.builtin.get_url:
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('u=rw,g=r') }}"
        url: "{{ item.url }}"
      loop: "{{ mt_runner_get_url_list }}"

- name: Runs terminal
  async: 600
  poll: 0
  changed_when: false
  ansible.builtin.command:
    argv:
      - "{{ mt_runner_cmd_prefix }}"
      - "{{ mt_runner_mt_terminal_path }}"
      - "{{ '/config:tester.ini' if (mt_runner_mt_version | int) == 5 else 'tester.ini' }}"
  args:
    chdir: '{{ mt_runner_mt_path }}'
  environment:
    DISPLAY: "{{ xvfb_display }}"
    WINEDEBUG: warn-all,fixme-all,-alsa,-ole,-toolbar
  register: cmd_terminal_async

- name: Check for terminal log
  block:
    - name: Wait for the terminal log file to be created
      ansible.builtin.wait_for:
        delay: 30
        path: |-
          {{ mt_runner_mt_path ~ '/logs/' ~ ('%Y%m%d' | strftime(ansible_date_time.epoch | int)) }}.log
        sleep: 10
        state: present
        timeout: 60
      register: task_wait_for_terminal_logs
    - name: Prints terminal log file (MT4)
      ansible.builtin.command:
        cmd: cat "{{ task_wait_for_terminal_logs.path }}"
      changed_when: false
      when: (mt_runner_mt_version | int) == 4
    - name: Prints terminal log file (MT5)
      ansible.builtin.command:
        cmd: iconv -f utf-16 -t utf-8 "{{ task_wait_for_terminal_logs.path }}"
      changed_when: false
      failed_when: |
        cmd_iconv_res.stderr | length > 0
        or ("exit with code -" in cmd_iconv_res.stdout)
        or ("not found" in cmd_iconv_res.stdout)
        or ("tester didn't start" in cmd_iconv_res.stdout)
        or ("tester not started" in cmd_iconv_res.stdout)
      register: cmd_iconv_res
      when: (mt_runner_mt_version | int) == 5

- name: Wait for test results
  block:
    - name: Wait until terminal exits
      ansible.builtin.async_status:
        jid: '{{ cmd_terminal_async.ansible_job_id }}'
      changed_when: false
      delay: 10  # How much time to wait between retries.
      register: cmd_terminal_async_status
      until: cmd_terminal_async_status is finished
      retries: "{{ mt_runner_timeout // 10 }}"
  always:
    - name: Prints final terminal log file (MT4)
      ansible.builtin.command:
        cmd: cat "{{ task_wait_for_terminal_logs.path }}"
      changed_when: false
      when: (mt_runner_mt_version | int) == 4
    - name: Prints final terminal log file (MT5)
      ansible.builtin.command:
        cmd: iconv -f utf-16 -t utf-8 "{{ task_wait_for_terminal_logs.path }}"
      changed_when: false
      failed_when: |
        cmd_iconv_res.stderr | length > 0
        or ('tester not started' in cmd_iconv_res.stdout)
        or ('not found' in cmd_iconv_res.stdout)
      register: cmd_iconv_res
      when: (mt_runner_mt_version | int) == 5

- name: Converts report to CSV (Orders)
  copy:
    content: |
      {{ lookup('parse_mt_report', "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}", 'orders', True) }}
    dest: "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}-Orders.csv"
  become: true
  become_user: root

- name: Converts report to CSV (Deals)Z
  copy:
    content: |
      {{ lookup('parse_mt_report', "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}", 'deals', True) }}
    dest: "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}-Deals.csv"
  become: true
  become_user: root

- name: Converts report to CSV (Header)
  copy:
    content: |
      {{ lookup('parse_mt_report', "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}", 'header', True) }}
    dest: "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}-Header.csv"
  become: true
  become_user: root

- name: Converts report to CSV (Optimization)
  copy:
    content: |
      {{ lookup('parse_mt_report', "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}", 'opt', True) }}
    dest: "{{ mt_runner_mt_path }}/{{ mt_runner_bt_mt5_config.Tester.Report }}-Optimization.csv"
  become: true
  become_user: root

- name: Make sure all handlers run
  ansible.builtin.meta: flush_handlers
